
> analysis_code@1.0.0 jalangi
> mx jalangi --analysis ../src/ch.usi.inf.nodeprof/js/analysis/asyncawait/analysis.js "./Sync_Async_Sync.js"

functionEnter@ (Sync_Async_Sync.js:1:1:133:43)
functionExit@ (Sync_Async_Sync.js:1:1:133:43) [Function (anonymous)] {}
functionEnter@ (Sync_Async_Sync.js:1:1:133:43)
write (Sync_Async_Sync.js:4:1:9:2) generateRandomSensorData [Function: generateRandomSensorData]
write (Sync_Async_Sync.js:12:1:15:2) writeSensorDataToFile [Function: writeSensorDataToFile]
write (Sync_Async_Sync.js:18:1:22:2) syncFunction1 [Function: syncFunction1]
write (Sync_Async_Sync.js:25:1:29:2) syncFunction2 [Function: syncFunction2]
write (Sync_Async_Sync.js:32:1:36:2) syncFunction3 [Function: syncFunction3]
write (Sync_Async_Sync.js:39:1:43:2) syncFunction4 [Function: syncFunction4]
write (Sync_Async_Sync.js:46:1:63:2) asyncFunction [AsyncFunction: asyncFunction]
write (Sync_Async_Sync.js:66:1:73:2) simulateClients [AsyncFunction: simulateClients]
write (Sync_Async_Sync.js:1:1:1:25) fs {
  appendFile: [Function: appendFile],
  appendFileSync: [Function: appendFileSync],
  access: [Function: access],
  accessSync: [Function: accessSync],
  chown: [Function: chown],
  chownSync: [Function: chownSync],
  chmod: [Function: chmod],
  chmodSync: [Function: chmodSync],
  close: [Function: close],
  closeSync: [Function: closeSync],
  copyFile: [Function: copyFile],
  copyFileSync: [Function: copyFileSync],
  cp: [Function: cp],
  cpSync: [Function: cpSync],
  createReadStream: [Function: createReadStream],
  createWriteStream: [Function: createWriteStream],
  exists: [Function: exists],
  existsSync: [Function: existsSync],
  fchown: [Function: fchown],
  fchownSync: [Function: fchownSync],
  fchmod: [Function: fchmod],
  fchmodSync: [Function: fchmodSync],
  fdatasync: [Function: fdatasync],
  fdatasyncSync: [Function: fdatasyncSync],
  fstat: [Function: fstat],
  fstatSync: [Function: fstatSync],
  fsync: [Function: fsync],
  fsyncSync: [Function: fsyncSync],
  ftruncate: [Function: ftruncate],
  ftruncateSync: [Function: ftruncateSync],
  futimes: [Function: futimes],
  futimesSync: [Function: futimesSync],
  lchown: [Function: lchown],
  lchownSync: [Function: lchownSync],
  lchmod: undefined,
  lchmodSync: undefined,
  link: [Function: link],
  linkSync: [Function: linkSync],
  lstat: [Function: lstat],
  lstatSync: [Function: lstatSync],
  lutimes: [Function: lutimes],
  lutimesSync: [Function: lutimesSync],
  mkdir: [Function: mkdir],
  mkdirSync: [Function: mkdirSync],
  mkdtemp: [Function: mkdtemp],
  mkdtempSync: [Function: mkdtempSync],
  open: [Function: open],
  openSync: [Function: openSync],
  opendir: [Function: opendir],
  opendirSync: [Function: opendirSync],
  readdir: [Function: readdir],
  readdirSync: [Function: readdirSync],
  read: [Function: read],
  readSync: [Function: readSync],
  readv: [Function: readv],
  readvSync: [Function: readvSync],
  readFile: [Function: readFile],
  readFileSync: [Function: readFileSync],
  readlink: [Function: readlink],
  readlinkSync: [Function: readlinkSync],
  realpath: [Function: realpath] { native: [Function (anonymous)] },
  realpathSync: [Function: realpathSync] { native: [Function (anonymous)] },
  rename: [Function: rename],
  renameSync: [Function: renameSync],
  rm: [Function: rm],
  rmSync: [Function: rmSync],
  rmdir: [Function: rmdir],
  rmdirSync: [Function: rmdirSync],
  stat: [Function: stat],
  statSync: [Function: statSync],
  symlink: [Function: symlink],
  symlinkSync: [Function: symlinkSync],
  truncate: [Function: truncate],
  truncateSync: [Function: truncateSync],
  unwatchFile: [Function: unwatchFile],
  unlink: [Function: unlink],
  unlinkSync: [Function: unlinkSync],
  utimes: [Function: utimes],
  utimesSync: [Function: utimesSync],
  watch: [Function: watch],
  watchFile: [Function: watchFile],
  writeFile: [Function: writeFile],
  writeFileSync: [Function: writeFileSync],
  write: [Function: write],
  writeSync: [Function: writeSync],
  writev: [Function: writev],
  writevSync: [Function: writevSync],
  Dir: [class Dir],
  Dirent: [class Dirent],
  Stats: [Function: Stats],
  ReadStream: [Getter/Setter],
  WriteStream: [Getter/Setter],
  FileReadStream: [Getter/Setter],
  FileWriteStream: [Getter/Setter],
  _toUnixTimestamp: [Function: toUnixTimestamp],
  F_OK: 0,
  R_OK: 4,
  W_OK: 2,
  X_OK: 1,
  constants: [Object: null prototype] {
    UV_FS_SYMLINK_DIR: 1,
    UV_FS_SYMLINK_JUNCTION: 2,
    O_RDONLY: 0,
    O_WRONLY: 1,
    O_RDWR: 2,
    UV_DIRENT_UNKNOWN: 0,
    UV_DIRENT_FILE: 1,
    UV_DIRENT_DIR: 2,
    UV_DIRENT_LINK: 3,
    UV_DIRENT_FIFO: 4,
    UV_DIRENT_SOCKET: 5,
    UV_DIRENT_CHAR: 6,
    UV_DIRENT_BLOCK: 7,
    S_IFMT: 61440,
    S_IFREG: 32768,
    S_IFDIR: 16384,
    S_IFCHR: 8192,
    S_IFBLK: 24576,
    S_IFIFO: 4096,
    S_IFLNK: 40960,
    S_IFSOCK: 49152,
    O_CREAT: 64,
    O_EXCL: 128,
    UV_FS_O_FILEMAP: 0,
    O_NOCTTY: 256,
    O_TRUNC: 512,
    O_APPEND: 1024,
    O_DIRECTORY: 65536,
    O_NOATIME: 262144,
    O_NOFOLLOW: 131072,
    O_SYNC: 1052672,
    O_DSYNC: 4096,
    O_DIRECT: 16384,
    O_NONBLOCK: 2048,
    S_IRWXU: 448,
    S_IRUSR: 256,
    S_IWUSR: 128,
    S_IXUSR: 64,
    S_IRWXG: 56,
    S_IRGRP: 32,
    S_IWGRP: 16,
    S_IXGRP: 8,
    S_IRWXO: 7,
    S_IROTH: 4,
    S_IWOTH: 2,
    S_IXOTH: 1,
    F_OK: 0,
    R_OK: 4,
    W_OK: 2,
    X_OK: 1,
    UV_FS_COPYFILE_EXCL: 1,
    COPYFILE_EXCL: 1,
    UV_FS_COPYFILE_FICLONE: 2,
    COPYFILE_FICLONE: 2,
    UV_FS_COPYFILE_FICLONE_FORCE: 4,
    COPYFILE_FICLONE_FORCE: 4
  },
  promises: [Getter]
}
asyncEnter (Sync_Async_Sync.js:66:1:73:2)
functionEnter@ (Sync_Async_Sync.js:66:1:73:2)
	write (Sync_Async_Sync.js:67:3:67:23) numClients 3
	write (Sync_Async_Sync.js:68:3:68:28) clientPromises []
	write (Sync_Async_Sync.js:69:8:69:17) i 1
	binary 1 <= 3 = true
	conditional (Sync_Async_Sync.js:69:19:69:34) true
	
	asyncEnter (Sync_Async_Sync.js:46:1:63:2)
	functionEnter@ (Sync_Async_Sync.js:46:1:63:2)
		binary Starting asyncFunction for client  + 1 = Starting asyncFunction for client 1
		Starting asyncFunction for client 1
		functionEnter@ (Sync_Async_Sync.js:4:1:9:2)
			binary 0.7753482960241892 * 50 = 38.76741480120946
			binary 38 + 10 = 48
			binary 0.7520390052194048 * 1000 = 752.0390052194048
			binary 752 + 900 = 1652
			return (Sync_Async_Sync.js:5:3:8:5) { temperature: 48, pressure: 1652 }
		functionExit@ (Sync_Async_Sync.js:4:1:9:2) { temperature: 48, pressure: 1652 } {}
		
		write (Sync_Async_Sync.js:50:3:50:48) sensorData { temperature: 48, pressure: 1652 }
		functionEnter@ (Sync_Async_Sync.js:12:1:15:2)
			Sensor data written to file: { temperature: 48, pressure: 1652 }
		functionExit@ (Sync_Async_Sync.js:12:1:15:2) undefined {}
		
		binary 48 > 30 = true
		conditional (Sync_Async_Sync.js:54:7:54:64) true
		conditional (Sync_Async_Sync.js:54:7:54:64) true
		binary 
		Threshold exceeded for client  + 1 = Threshold exceeded for client 1
		Threshold exceeded for client 1

		functionEnter@ (Sync_Async_Sync.js:32:1:36:2)
			binary Starting syncFunction3 for client  + 1 = Starting syncFunction3 for client 1
			Starting syncFunction3 for client 1
			binary Data written to storage for client  + 1 = Data written to storage for client 1
			Data written to storage for client 1
		functionExit@ (Sync_Async_Sync.js:32:1:36:2) undefined {}

		functionEnter@ (Sync_Async_Sync.js:39:1:43:2)
			binary Starting syncFunction4 for client  + 1 = Starting syncFunction4 for client 1
			Starting syncFunction4 for client 1
			binary SMS sent to client  + 1 = SMS sent to client 1
			SMS sent to client 1
		functionExit@ (Sync_Async_Sync.js:39:1:43:2) undefined {}
		binary Async function completed for client  + 1 = Async function completed for client 1
		Async function completed for client 1
	functionExit@ (Sync_Async_Sync.js:46:1:63:2) undefined {}
	asyncExit (Sync_Async_Sync.js:46:1:63:2) Promise { undefined } {}
**************************************************************************
	write (Sync_Async_Sync.js:69:36:69:39) i 2
	binary 2 <= 3 = true
	conditional (Sync_Async_Sync.js:69:19:69:34) true
	
	asyncEnter (Sync_Async_Sync.js:46:1:63:2)
	functionEnter@ (Sync_Async_Sync.js:46:1:63:2)
		binary Starting asyncFunction for client  + 2 = Starting asyncFunction for client 2
		Starting asyncFunction for client 2
	functionEnter@ (Sync_Async_Sync.js:4:1:9:2)
		binary 0.7121060535830268 * 50 = 35.60530267915134
		binary 35 + 10 = 45
		binary 0.932103198310898 * 1000 = 932.103198310898
		binary 932 + 900 = 1832
		return (Sync_Async_Sync.js:5:3:8:5) { temperature: 45, pressure: 1832 }
	functionExit@ (Sync_Async_Sync.js:4:1:9:2) { temperature: 45, pressure: 1832 } {}
	write (Sync_Async_Sync.js:50:3:50:48) sensorData { temperature: 45, pressure: 1832 }
	functionEnter@ (Sync_Async_Sync.js:12:1:15:2)
		Sensor data written to file: { temperature: 45, pressure: 1832 }
	functionExit@ (Sync_Async_Sync.js:12:1:15:2) undefined {}
	binary 45 > 30 = true
	conditional (Sync_Async_Sync.js:54:7:54:64) true
	conditional (Sync_Async_Sync.js:54:7:54:64) true
	binary Threshold exceeded for client  + 2 = Threshold exceeded for client 2
	Threshold exceeded for client 2
	functionEnter@ (Sync_Async_Sync.js:32:1:36:2)
		binary Starting syncFunction3 for client  + 2 = Starting syncFunction3 for client 2
		Starting syncFunction3 for client 2
		binary Data written to storage for client  + 2 = Data written to storage for client 2
		Data written to storage for client 2
	functionExit@ (Sync_Async_Sync.js:32:1:36:2) undefined {}
	
	functionEnter@ (Sync_Async_Sync.js:39:1:43:2)
		binary Starting syncFunction4 for client  + 2 = Starting syncFunction4 for client 2
		Starting syncFunction4 for client 2
		binary SMS sent to client  + 2 = SMS sent to client 2
		SMS sent to client 2
	functionExit@ (Sync_Async_Sync.js:39:1:43:2) undefined {}
	binary Async function completed for client  + 2 = Async function completed for client 2
	Async function completed for client 2
	
	functionExit@ (Sync_Async_Sync.js:46:1:63:2) undefined {}
	asyncExit (Sync_Async_Sync.js:46:1:63:2) Promise { undefined } {}

***************************************************
	write (Sync_Async_Sync.js:69:36:69:39) i 3
	binary 3 <= 3 = true
	conditional (Sync_Async_Sync.js:69:19:69:34) true
	asyncEnter (Sync_Async_Sync.js:46:1:63:2)
	functionEnter@ (Sync_Async_Sync.js:46:1:63:2)
		binary Starting asyncFunction for client  + 3 = Starting asyncFunction for client 3
		Starting asyncFunction for client 3
		functionEnter@ (Sync_Async_Sync.js:4:1:9:2)
			binary 0.8536646875951296 * 50 = 42.68323437975648
			binary 42 + 10 = 52
			binary 0.08211161117765842 * 1000 = 82.11161117765842
			binary 82 + 900 = 982
			return (Sync_Async_Sync.js:5:3:8:5) { temperature: 52, pressure: 982 }
		functionExit@ (Sync_Async_Sync.js:4:1:9:2) { temperature: 52, pressure: 982 } {}
		write (Sync_Async_Sync.js:50:3:50:48) sensorData { temperature: 52, pressure: 982 }

		functionEnter@ (Sync_Async_Sync.js:12:1:15:2)
			Sensor data written to file: { temperature: 52, pressure: 982 }
		functionExit@ (Sync_Async_Sync.js:12:1:15:2) undefined {}
		binary 52 > 30 = true
		conditional (Sync_Async_Sync.js:54:7:54:64) true
		conditional (Sync_Async_Sync.js:54:7:54:64) true
		binary Threshold exceeded for client  + 3 = Threshold exceeded for client 3
		Threshold exceeded for client 3
		functionEnter@ (Sync_Async_Sync.js:32:1:36:2)
			binary Starting syncFunction3 for client  + 3 = Starting syncFunction3 for client 3
			Starting syncFunction3 for client 3
			binary Data written to storage for client  + 3 = Data written to storage for client 3
			Data written to storage for client 3
		functionExit@ (Sync_Async_Sync.js:32:1:36:2) undefined {}
		functionEnter@ (Sync_Async_Sync.js:39:1:43:2)
			binary Starting syncFunction4 for client  + 3 = Starting syncFunction4 for client 3
			Starting syncFunction4 for client 3
			binary SMS sent to client  + 3 = SMS sent to client 3
			SMS sent to client 3
		functionExit@ (Sync_Async_Sync.js:39:1:43:2) undefined {}
		binary Async function completed for client  + 3 = Async function completed for client 3
		Async function completed for client 3

	functionExit@ (Sync_Async_Sync.js:46:1:63:2) undefined {}
	asyncExit (Sync_Async_Sync.js:46:1:63:2) Promise { undefined } {}
*********************************************************************	
write (Sync_Async_Sync.js:69:36:69:39) i 4
binary 4 <= 3 = false
conditional (Sync_Async_Sync.js:69:19:69:34) false

awaitPre (Sync_Async_Sync.js:72:3:72:36) <p0>
functionExit@ (Sync_Async_Sync.js:66:1:73:2) undefined { yield: true }
asyncExit (Sync_Async_Sync.js:66:1:73:2) Promise { <pending> } {}

functionExit@ (Sync_Async_Sync.js:1:1:133:43) undefined {}

functionEnter@ (Sync_Async_Sync.js:66:1:73:2)
	awaitPost (Sync_Async_Sync.js:72:3:72:36) <p0> [ undefined, undefined, undefined ] resolved
functionExit@ (Sync_Async_Sync.js:66:1:73:2) undefined {}
